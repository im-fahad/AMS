version: '3'
services:
  # NGINX & PHP-FPM Container
  application:
    build:
      context: docker/php/fpm
      dockerfile: Dockerfile
      args:
        SERVER_ENVIRONMENT: ${SERVER_ENVIRONMENT}
    container_name: application
    volumes:
      - ./:/var/www
      - ./docker/php/fpm/nginx/logs:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    restart: always
    ports:
      - ${WEBSOCKET_PORT}:7001
      - ${CLIENT_PORT}:80  # use this in local
      - ${CORE_APP_PORT}:81 # use this in local
    #      - 80:80      # use this in stage, dev and production
    #      - 443:443    # use this in stage, dev and production
    links:
      - node
    networks:
      - ams_network
  # PHP-CLI
  supervisord:
    build:
      context: docker/php/cli
      dockerfile: Dockerfile
    container_name: php-cli
    volumes:
      - ./core:/var/www/core
    networks:
      - ams_network
  # Node container
  #node:
  #    build:
  #      context: docker/node
  #      dockerfile: Dockerfile
  #      args:
  #        SERVER_ENVIRONMENT: ${SERVER_ENVIRONMENT}
  #    volumes:
  #      - ./client:/var/www/client
  #    container_name: node
  #    networks:
  #      - ams_network
  # MySQL Container
  mysql:
    image: mariadb
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=UTC
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - ams_network
  #PHPMYADMIN Container
  phpmyadmin:
    container_name: phpmyadmin
    build: ./docker/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST= mysql
      - MYSQL_USER=db_maintainer
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    ports:
      - ${PMA_PORT}:80
    depends_on:
      - mysql
    networks:
      - ams_network
  # Redis container
  redis:
    image: redis:latest
    container_name: ams_redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./docker/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always
    networks:
      - ams_network

volumes:
  database:
    driver: local
  redis:
    driver: local

networks:
  ams_network:
    driver: bridge
